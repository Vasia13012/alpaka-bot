from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher.filters import CommandStart
import logging
import os
from fastapi import FastAPI
from aiogram.types import Update
from aiogram.dispatcher.webhook import get_webhook_handler
import uvicorn

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è —Ç–∞ —Ç–æ–∫–µ–Ω–∞ ===
API_TOKEN = os.getenv("API_TOKEN")
logging.basicConfig(level=logging.INFO)

# === –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === Reply –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (–ø—ñ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥—É) ===
reply_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
reply_keyboard.row(
    KeyboardButton("–Ø–∫ –Ω–∞—Å –∑–Ω–∞–π—Ç–∏?"),
    KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–∏")
)
reply_keyboard.row(
    KeyboardButton("–î–æ–Ω–∞—Ç (Coming soon)"),
    KeyboardButton("?")
)

# === Inline –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (–ø—ñ–¥ –≤—ñ—Ç–∞–ª—å–Ω–∏–º –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º) ===
welcome_keyboard = InlineKeyboardMarkup(row_width=1)
welcome_keyboard.add(
    InlineKeyboardButton("üìç –ù–∞–≤—ñ–≥–∞—Ü—ñ—è", url="https://t.me/MyAlpaka")
)
welcome_keyboard.row(
    InlineKeyboardButton("üåê –°–æ—Ü–º–µ—Ä–µ–∂—ñ", url="https://t.me/MyAlpaka/6/10"),
    InlineKeyboardButton("üì∞ –ù–æ–≤–∏–Ω–∏", url="https://t.me/MyAlpaka/8")
)

# === –û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start ===
@dp.message_handler(CommandStart())
async def send_welcome(message: types.Message):
    username = message.from_user.username or "–¥—Ä—É–∂–µ"
    welcome_text = (
        f"üëã –í—ñ—Ç–∞—î–º–æ —Ç–µ–±–µ @{username}\n"
        f"–¶–µ \"Alpaka\" ‚Äî –º–æ–ª–æ–¥—å, —è–∫–∞ –¥–∏—Ö–∞—î –≥–ª–∏–±–∏–Ω–æ—é –π —Å–º—ñ—Ö–æ–º.\n"
        f"–¶–µ –ª—é–¥–∏, —è–∫—ñ —à—É–∫–∞—é—Ç—å —Å–µ–Ω—Å—É, —Å–≤—ñ—Ç–ª–∞ –π —Ç–µ–ø–ª–∞.\n"
        f"üåø –ú–∏ –º–æ–ª–∏–º–æ—Å—å, –ª—é–±–∏–º–æ –∞–∫—Ç–∏–≤–Ω–∏–π –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫,\n"
        f"–≥–æ–≤–æ—Ä–∏–º–æ —â–∏—Ä–æ, —Å–º—ñ—î–º–æ—Å—å –¥–æ –Ω–æ—á—ñ –π —Ç—Ä–∏–º–∞—î–º–æ—Å—å —Ä–∞–∑–æ–º.\n"
        f"–ú–æ–∂–ª–∏–≤–æ, —Ç–∏ —Ç—É—Ç –≤–∏–ø–∞–¥–∫–æ–≤–æ. –ê–ª–µ —Ç–æ—á–Ω–æ –Ω–µ –¥–∞—Ä–µ–º–Ω–æ.\n"
        f"–î–æ–±—Ä–µ, —â–æ —Ç–∏ –∑ –Ω–∞–º–∏ üíõ."
    )
    await message.answer(welcome_text, reply_markup=welcome_keyboard)
    await message.answer("–û–±–µ—Ä–∏ –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ ‚¨áÔ∏è", reply_markup=reply_keyboard)

# === FastAPI –¥–æ–¥–∞—Ç–æ–∫ ===
app = FastAPI()

WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://alpaka-bot-production.up.railway.app{WEBHOOK_PATH}"

@app.on_event("startup")
async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)

@app.post(WEBHOOK_PATH)
async def bot_webhook(update: dict):
    telegram_update = Update(**update)
    await dp.process_update(telegram_update)

if __name__ == "__main__":
    uvicorn.run("bot_railway_main:app", host="0.0.0.0", port=10000)
